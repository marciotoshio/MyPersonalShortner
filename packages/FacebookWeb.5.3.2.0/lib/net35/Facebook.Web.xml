<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Facebook.Web</name>
    </assembly>
    <members>
        <member name="T:Facebook.Web.CanvasAuthorizer">
            <summary>
            Represents the authorizer for the Canvas Applications.
            </summary>
        </member>
        <member name="T:Facebook.Web.FacebookWebAuthorizer">
            <summary>
            Represents the Facebook Web Authorizer
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebAuthorizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebAuthorizer"/> class.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebAuthorizer.#ctor(Facebook.Web.FacebookWebContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebAuthorizer"/> class.
            </summary>
            <param name="context">The <see cref="T:Facebook.Web.FacebookWebContext"/></param>
        </member>
        <member name="M:Facebook.Web.FacebookWebAuthorizer.#ctor(Facebook.IFacebookApplication,System.Web.HttpContextBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebAuthorizer"/> class.
            </summary>
            <param name="settings">The Facebook application settings.</param>
            <param name="httpContext">The HttpContext.</param>
        </member>
        <member name="M:Facebook.Web.FacebookWebAuthorizer.Authorize">
            <summary>
            Authorizes the user if the user is not logged in or the application does not have all the sepcified permissions.
            </summary>
            <returns>
            Return true if the user is authenticated and the application has all the specified permissions.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebAuthorizer.HandleUnauthorizedRequest">
            <summary>
            Handle unauthorized requests.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.FacebookWebRequest">
            <summary>
            The <see cref="T:Facebook.Web.FacebookWebContext"/>.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.Session">
            <summary>
            The Facebook session.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.Permissions">
            <summary>
            Gets or sets the extended permissions.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.ReturnUrlPath">
            <summary>
            Gets or sets the return url path.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.CancelUrlPath">
            <summary>
            Gets or sets the cancel url path.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.LoginDisplayMode">
            <summary>
            Gets or sets the login display mode.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebAuthorizer.State">
            <summary>
            Gets or sets an opaque state used to maintain application state between the request and callback.
            </summary>
        </member>
        <member name="M:Facebook.Web.CanvasAuthorizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.CanvasAuthorizer"/> class. 
            </summary>
        </member>
        <member name="M:Facebook.Web.CanvasAuthorizer.#ctor(Facebook.Web.FacebookWebContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.CanvasAuthorizer"/> class. 
            </summary>
            <param name="context">The <see cref="T:Facebook.Web.FacebookWebContext"/></param>
        </member>
        <member name="M:Facebook.Web.CanvasAuthorizer.#ctor(Facebook.IFacebookApplication,System.Web.HttpContextBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.CanvasAuthorizer"/> class. 
            </summary>
            <param name="settings">The Facebook application settings.</param>
            <param name="httpContext">The HttpContext.</param>
        </member>
        <member name="M:Facebook.Web.CanvasAuthorizer.HandleUnauthorizedRequest">
            <summary>
            Handle unauthorized requests.
            </summary>
        </member>
        <member name="M:Facebook.Web.CanvasAuthorizer.GetLoginUrl(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the canvas login url.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            Returns the login url.
            </returns>
        </member>
        <member name="T:Facebook.Web.CanvasUrlBuilder">
            <summary>
            Facebook Canvas Url builder.
            </summary>
        </member>
        <member name="F:Facebook.Web.CanvasUrlBuilder.RedirectPath">
            <summary>
            Redirect path.
            </summary>
        </member>
        <member name="F:Facebook.Web.CanvasUrlBuilder._settings">
            <summary>
            Facebook Application settings.
            </summary>
        </member>
        <member name="F:Facebook.Web.CanvasUrlBuilder._httpRequest">
            <summary>
            The http request.
            </summary>
        </member>
        <member name="F:Facebook.Web.CanvasUrlBuilder._useFacebookBeta">
            <summary>
            Indicates whether the url is beta.
            </summary>
        </member>
        <member name="F:Facebook.Web.CanvasUrlBuilder._isSecureConnection">
            <summary>
            Indicates whether the url is secure.
            </summary>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.#ctor(Facebook.IFacebookApplication,System.Web.HttpRequestBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.CanvasUrlBuilder"/> class.
            </summary>
            <param name="settings">
            The settings.
            </param>
            <param name="httpRequest">
            The http request.
            </param>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.CanvasUrlBuilder"/> class.
            </summary>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.BuildCanvasPageUrl(System.String)">
            <summary>
            Builds a Facebook canvas page return URL.
            </summary>
            <param name="pathAndQuery">The path and query.</param>
            <returns>
            The canvas page url.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.BuildCanvasUrl(System.String)">
            <summary>
            Builds a Facebook canvas return URL.
            </summary>
            <param name="pathAndQuery">The path and query.</param>
            <returns>
            The canvas url.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.GetLoginUrl(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the canvas login url
            </summary>
            <param name="returnUrlPath">
            The return Url Path.
            </param>
            <param name="cancelUrlPath">
            The cancel Url Path.
            </param>
            <param name="state">
            The state.
            </param>
            <param name="loginParameters">
            The parameters.
            </param>
            <returns>
            Returns the login url.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.GetCanvasRedirectHtml(System.Uri)">
            <summary>
            Gets the canvas redirect HTML.
            </summary>
            <param name="url">The redirect url.</param>
            <returns>
            Returns redirect html.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.IsRelativeUri(System.String)">
            <summary>
            Checks if the specified input string is a valid relative uri.
            </summary>
            <param name="str">
            The str.
            </param>
            <returns>
            Returns true if the input string is a valid uri.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.IsSecureUrl(System.Uri)">
            <summary>
            Checks if the url is a secure url.
            </summary>
            <param name="url">
            The url.
            </param>
            <returns>
            Returns true if the url is secure.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilder.IsBeta(System.Uri)">
            <summary>
            Checks if the url is beta.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <returns>
            Returns true if the url is beta.
            </returns>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.DomainMaps">
            <summary>
            Gets the aliases to Facebook domains.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.CanvasPage">
            <summary>
            Gets the base url of your application on Facebook.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.CanvasPageApplicationPath">
            <summary>
            Gets the Facebook Application Path.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.CanvasUrl">
            <summary>
            Gets the URL where Facebook pulls the content for your application's canvas pages.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.SecureCanvasUrl">
            <summary>
            Gets the secure URL where Facebook pulls the content for your application's cavas pages.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.CurrentCanvasUrl">
            <summary>
            Gets the current URL of your application that Facebook
            is pulling..
            </summary>
            <value>The current canvas URL.</value>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.CurrentCanvasPathAndQuery">
            <summary>
            Gets the current Path and query of the application 
            being pulled by Facebook.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.CurrentCanvasPage">
            <summary>
            Gets the current url of the application on facebook.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.IsSecureConnection">
            <summary>
            Gets or sets a value indicating whether the connection is secure.
            </summary>
        </member>
        <member name="P:Facebook.Web.CanvasUrlBuilder.UseFacebookBeta">
            <summary>
            Gets or sets a value indicating whether to use Facebook beta.
            </summary>
        </member>
        <member name="T:Facebook.Web.CanvasUrlBuilderExtensions">
            <summary>
            Extensions methods for Canvas Url Builder
            </summary>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilderExtensions.ResolveCanvasPageUrl(System.Web.UI.Control,System.String)">
            <summary>
            Gets a canvas page url that can be used by the browser.
            </summary>
            <param name="control">
            The control.
            </param>
            <param name="relativeUrl">
            The relative url.
            </param>
            <returns>
            The canvas page url.
            </returns>
        </member>
        <member name="M:Facebook.Web.CanvasUrlBuilderExtensions.ResolveCanvasUrl(System.Web.UI.Control,System.String)">
            <summary>
            Gets a canvas url that can be used by the browser.
            </summary>
            <param name="control">
            The control.
            </param>
            <param name="relativeUrl">
            The relative url.
            </param>
            <returns>
            The canvas url.
            </returns>
        </member>
        <member name="T:Facebook.Web.FacebookAppRedirectHttpHandler">
            <summary>
            Represents the redirector used after a Facebook canvas authorization.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookAppRedirectHttpHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="P:Facebook.Web.FacebookAppRedirectHttpHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="T:Facebook.FacebookAsyncCallback">
            <summary>
            Represents the method that handles the post-call result.
            </summary>
            <param name="asyncResult">The Facebook asynchronous result.</param>
        </member>
        <member name="T:Facebook.FacebookAsyncCallback`1">
            <summary>
            Represents the method that handles the post-call result.
            </summary>
            <param name="asyncResult">The Facebook asynchronous result.</param>
        </member>
        <member name="T:Facebook.FacebookAsyncResult">
            <summary>
            Represents the status of an asynchronous Facebook api call.
            </summary>
        </member>
        <member name="F:Facebook.FacebookAsyncResult._result">
            <summary>
            The result of the asynchronous operation.
            </summary>
        </member>
        <member name="F:Facebook.FacebookAsyncResult._asyncState">
            <summary>
            The user-defined object that qualifies or contains information about an asynchronous operation
            </summary>
        </member>
        <member name="F:Facebook.FacebookAsyncResult._asyncWaitHandle">
            <summary>
            A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
        </member>
        <member name="F:Facebook.FacebookAsyncResult._completedSynchronously">
            <summary>
            A value that indicates whether the asynchronous operation completed synchronously.
            </summary>
        </member>
        <member name="F:Facebook.FacebookAsyncResult._isCompleted">
            <summary>
            A value that indicates whether the asynchronous operation has completed.
            </summary>
        </member>
        <member name="F:Facebook.FacebookAsyncResult._error">
            <summary>
            The error that occurred processing this api call.
            </summary>
        </member>
        <member name="M:Facebook.FacebookAsyncResult.#ctor(System.Object,System.Object,System.Threading.WaitHandle,System.Boolean,System.Boolean,Facebook.FacebookApiException)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookAsyncResult"/> class.
            </summary>
            <param name="result">The result.</param>
            <param name="asyncState">State of the async.</param>
            <param name="asyncWaitHandle">The async wait handle.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
            <param name="isCompleted">if set to <c>true</c> [is completed].</param>
            <param name="error">The error.</param>
        </member>
        <member name="P:Facebook.FacebookAsyncResult.Error">
            <summary>
            Gets the error that occurred processing this api call.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:Facebook.FacebookAsyncResult.Result">
            <summary>
            Gets the result of an asynchronous operation.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Facebook.FacebookAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <value></value>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Facebook.FacebookAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Facebook.FacebookAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value indicating whether the asynchronous operation completed synchronously.
            </summary>
            <value></value>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Facebook.FacebookAsyncResult.IsCompleted">
            <summary>
            Gets a value indicating whether the asynchronous operation has completed.
            </summary>
            <value></value>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="T:Facebook.FacebookAsyncResult`1">
            <summary>
            Represents the status of a generic asynchronous Facebook api call.
            </summary>
        </member>
        <member name="M:Facebook.FacebookAsyncResult`1.#ctor(System.Object,System.Object,System.Threading.WaitHandle,System.Boolean,System.Boolean,Facebook.FacebookApiException)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookAsyncResult"/> class.
            </summary>
            <param name="result">The result.</param>
            <param name="asyncState">State of the async.</param>
            <param name="asyncWaitHandle">The async wait handle.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
            <param name="isCompleted">if set to <c>true</c> [is completed].</param>
            <param name="error">The error.</param>
        </member>
        <member name="P:Facebook.FacebookAsyncResult`1.Result">
            <summary>
            Gets the result of an asynchronous operation.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Facebook.FacebookSession">
            <summary>
            Represents a Facebook session.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSession._data">
            <summary>
            The actual value of the facebook session.
            </summary>
        </member>
        <member name="M:Facebook.FacebookSession.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookSession"/> class.
            </summary>
            <param name="accessToken">
            The access token.
            </param>
        </member>
        <member name="M:Facebook.FacebookSession.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookSession"/> class.
            </summary>
            <param name="dictionary">
            The dictionary.
            </param>
        </member>
        <member name="M:Facebook.FacebookSession.ParseUserIdFromAccessToken(System.String)">
            <summary>
            Extracts the user id from access token.
            </summary>
            <param name="accessToken">
            The access token.
            </param>
            <returns>
            Returns the user id if successful otherwise null.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.GetCookieName(System.String)">
            <summary>
            Gets the Facebook session cookie name for the specified Facebook application.
            </summary>
            <param name="appId">
            The app id.
            </param>
            <returns>
            Returns the name of the cookie name.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.GetSessionCookieValue(System.String,System.Web.HttpRequestBase)">
            <summary>
            Gets the Facebook session cookie value for the specified application.
            </summary>
            <param name="appId">
            The app id.
            </param>
            <param name="httpRequet">
            The http request.
            </param>
            <returns>
            Returns the Facebook session cookie value if present otherwise null.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.GetSession(Facebook.IFacebookApplication,System.Web.HttpContextBase)">
            <summary>
             Gets the Facebook session from the http request.
            </summary>
            <param name="settings">
            The app settings.
            </param>
            <param name="httpContext">
            The http context.
            </param>
            <returns>
            Returns the Facebook session if found, otherwise null.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.GetSession(Facebook.IFacebookApplication,System.Web.HttpContextBase,Facebook.FacebookSignedRequest)">
            <summary>
             Gets the Facebook session from the http request.
            </summary>
            <param name="appId">
            The app id.
            </param>
            <param name="appSecret">
            The app secret.
            </param>
            <param name="httpContext">
            The http context.
            </param>
            <returns>
            Returns the Facebook session if found, otherwise null.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.Create(Facebook.IFacebookApplication,Facebook.FacebookSignedRequest)">
            <summary>
            Creates a Facebook session from a signed request.
            </summary>
            <param name="appSecret">
            The app secret.
            </param>
            <param name="signedRequest">
            The signed request.
            </param>
            <returns>
            The Facebook session.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.ParseCookieValue(Facebook.IFacebookApplication,System.String)">
            <summary>
            Parses the session value from a cookie.
            </summary>
            <param name="appSecret">
            The app Secret.
            </param>
            <param name="cookieValue">
            The session value.
            </param>
            <returns>
            The Facebook session object.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSession.GenerateSessionSignature(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Generates a MD5 signature for the Facebook session.
            </summary>
            <param name="secret">
            The app secret.
            </param>
            <param name="dictionary">
            The dictionary.
            </param>
            <returns>
            Returns the generated signature.
            </returns>
            <remarks>
            http://developers.facebook.com/docs/authentication/
            </remarks>
        </member>
        <member name="P:Facebook.FacebookSession.UserId">
            <summary>
            Gets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Facebook.FacebookSession.Secret">
            <summary>
            Gets the secret.
            </summary>
            <value>The secret.</value>
        </member>
        <member name="P:Facebook.FacebookSession.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:Facebook.FacebookSession.SessionKey">
            <summary>
            Gets the session key.
            </summary>
            <value>The session key.</value>
        </member>
        <member name="P:Facebook.FacebookSession.Expires">
            <summary>
            Gets the expires.
            </summary>
            <value>The expires.</value>
        </member>
        <member name="P:Facebook.FacebookSession.Signature">
            <summary>
            Gets the signature.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="P:Facebook.FacebookSession.BaseDomain">
            <summary>
            Gets the base domain.
            </summary>
            <value>The base domain.</value>
        </member>
        <member name="P:Facebook.FacebookSession.Data">
            <summary>
            Gets actual value of signed request.
            </summary>
        </member>
        <member name="T:Facebook.FacebookSignedRequest">
            <summary>
            Represents a Facebook signed request.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSignedRequest._data">
            <summary>
            The actual value of the signed request.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSignedRequest._accessToken">
            <summary>
            The access token.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSignedRequest._userId">
            <summary>
            The user id.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSignedRequest._profileId">
            <summary>
            The profile id.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSignedRequest._expires">
            <summary>
            The expires.
            </summary>
        </member>
        <member name="F:Facebook.FacebookSignedRequest._issuedAt">
            <summary>
            The issued at.
            </summary>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookSignedRequest"/> class.
            </summary>
            <param name="data">
            The signed request data.
            </param>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.TryParse(System.String,System.String,Facebook.FacebookSignedRequest@)">
            <summary>
            Try parsing the signed request.
            </summary>
            <param name="secret">
            The secret.
            </param>
            <param name="signedRequestValue">
            The signed request value.
            </param>
            <param name="signedRequest">
            The signed request.
            </param>
            <returns>
            Returns true if parsing was successful otherwise false.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.TryParse(Facebook.IFacebookApplication,System.String,Facebook.FacebookSignedRequest@)">
            <summary>
            Try parsing the signed request.
            </summary>
            <param name="facebookApplication">
            The Facebook application.
            </param>
            <param name="signedRequestValue">
            The signed request value.
            </param>
            <param name="signedRequest">
            The signed request.
            </param>
            <returns>
            Returns true if parsing was successful otherwise false.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.Parse(System.String,System.String)">
            <summary>
            Parse the signed request.
            </summary>
            <param name="secret">
            The secret.
            </param>
            <param name="signedRequestValue">
            The signed request value.
            </param>
            <returns>
            Returns the signed request.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.Parse(Facebook.IFacebookApplication,System.String)">
            <summary>
            Parse the signed request.
            </summary>
            <param name="facebookApplication">
            The Facebook application.
            </param>
            <param name="signedRequestValue">
            The signed request value.
            </param>
            <returns>
            Returns the signed request.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.Parse(Facebook.IFacebookApplication,System.Web.HttpRequestBase)">
            <summary>
            Parse the signed request.
            </summary>
            <param name="facebookApplication">
            The facebook application.
            </param>
            <param name="request">
            The request.
            </param>
            <returns>
            Returns the signed request.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.TryParse(Facebook.IFacebookApplication,System.Web.HttpRequestBase,Facebook.FacebookSignedRequest@)">
            <summary>
            Try parsing the signed request.
            </summary>
            <param name="facebookApplication">
            The facebook application.
            </param>
            <param name="request">
            The request.
            </param>
            <param name="signedRequest">
            The signed request.
            </param>
            <returns>
            Returns true if parsing is successful otherwise false.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.GetSignedRequest(System.String,System.String,System.Web.HttpContextBase)">
            <summary>
            Gets the facebook signed request from the http request.
            </summary>
            <param name="appSecret">
            The app Secret.
            </param>
            <param name="httpContext">
            The http context.
            </param>
            <returns>
            Returns the signed request if found otherwise null.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.TryParse(System.String,System.String,System.Int32,System.Double,System.Boolean)">
            <summary>
            Parse the signed request string.
            </summary>
            <param name="secret">
            The secret.
            </param>
            <param name="signedRequestValue">
            The signed request value.
            </param>
            <param name="maxAge">
            The max age.
            </param>
            <param name="currentTime">
            The current time.
            </param>
            <param name="throws">
            The throws.
            </param>
            <returns>
            The FacebookSignedRequest.
            </returns>
        </member>
        <member name="M:Facebook.FacebookSignedRequest.GetSignedRequestCookieName(System.String)">
            <summary>
            Gets the facebook cookie that potentially houses the signed request for the app user.
            </summary>
            <param name="appId">The app id.</param>
            <returns>The name of the cookie that would house the signed request.</returns>
        </member>
        <member name="P:Facebook.FacebookSignedRequest.Data">
            <summary>
            Gets actual value of signed request.
            </summary>
        </member>
        <member name="P:Facebook.FacebookSignedRequest.AccessToken">
            <summary>
            Gets the access token.
            </summary>
        </member>
        <member name="P:Facebook.FacebookSignedRequest.UserId">
            <summary>
            Gets the user id.
            </summary>
        </member>
        <member name="P:Facebook.FacebookSignedRequest.ProfileId">
            <summary>
            Gets the profile id.
            </summary>
        </member>
        <member name="P:Facebook.FacebookSignedRequest.Expires">
            <summary>
            Gets the expires.
            </summary>
        </member>
        <member name="P:Facebook.FacebookSignedRequest.IssuedAt">
            <summary>
            Gets the issued at.
            </summary>
        </member>
        <member name="T:Facebook.Web.FacebookSubscriptionsHttpHandler">
            <summary>
            Represents the base class for handling incoming Facebook subscriptions.
            </summary>
            <remarks>
            For more information visit http://developers.facebook.com/docs/api/realtime
            1. Getting the Facebook app access token. 
                var oauth = new FacebookOAuthClient { ClientId = "...", ClientSecret = "..." };
                dynamic result = oauth.GetApplicationAccessToken();
                var fb = new FacebookClient(result.access_token);
            2. Subscribing to subscriptions:
                dynamic result = fb.Post(
                           string.Format("/{0}/subscriptions", appId), new Dictionary&lt;string, object>
                                                                           {
                                                                               { "object","user"},
                                                                               { "fields","name,picture,feed" },
                                                                               { "callback_url", "http://localhost/fbsubscriptions.ashx" },
                                                                               { "verify_token", "abc" }
                                                                           });
               dynamic result2 = fb.Post(
                     string.Format("/{0}/subscriptions", appId), new Dictionary&lt;string, object>
                                                                       {
                                                                           { "object","permissions"},
                                                                           { "fields","email,read_stream,offline_access" },
                                                                           { "callback_url", "http://localhost/fbsubscriptions.ashx" },
                                                                           { "verify_token", "abc" }
                                                                       });
            3. receiving and processing subscriptions.
                ProcessSubscription is called when the subscription is received.
                result contains the JsonObject.
            </remarks>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionsHttpHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionsHttpHandler.OnVerifying(Facebook.Web.FacebookSubscriptionContext)">
            <summary>
            Set your verification token here.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionsHttpHandler.VerifyCore(Facebook.Web.FacebookSubscriptionContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContextWrapper"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionsHttpHandler.ProcessSubscription(Facebook.Web.FacebookSubscriptionContext,System.Object)">
            <summary>
            Process the subscription.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="result">
            The result.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionsHttpHandler.HandleUnauthorizedRequest(Facebook.Web.FacebookSubscriptionContext)">
            <summary>
            Handles unauthorized requests.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="P:Facebook.Web.FacebookSubscriptionsHttpHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <returns>
            true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.
            </returns>
        </member>
        <member name="T:Facebook.Web.FacebookSubscriptionContext">
            <summary>
            Represents the subscription context.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookSubscriptionContext.VerificationToken">
            <summary>
            Gets or sets the verify_token.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookSubscriptionContext.FacebookApplication">
            <summary>
            Gets or sets the Facebook application.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookSubscriptionContext.HttpContext">
            <summary>
            Gets or sets the HttpContext.
            </summary>
        </member>
        <member name="T:Facebook.Web.FacebookSubscriptionVerifier">
            <summary>
            Facebook helper methods for web.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionVerifier.VerifyHttpXHubSignature(System.String,System.String,System.String)">
            <summary>
            Verify HTTP_X_HUB_SIGNATURE.
            </summary>
            <param name="secret">
            The secret.
            </param>
            <param name="httpXHubSignature">
            The http x hub signature.
            </param>
            <param name="jsonString">
            The json string.
            </param>
            <returns>
            Returns true if validation is successful.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionVerifier.VerifyGetSubscription(System.Web.HttpRequestBase,System.String,System.String@)">
            <summary>
            Verify HTTP_X_HUB_SIGNATURE for http GET method.
            </summary>
            <param name="request">
            The http request.
            </param>
            <param name="verifyToken">
            The verify token.
            </param>
            <param name="errorMessage">
            The error message.
            </param>
            <returns>
            Returns true if successful otherwise false.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookSubscriptionVerifier.VerifyPostSubscription(System.Web.HttpRequestBase,System.String,System.String,System.String@)">
            <summary>
            Verify HTTP_X_HUB_SIGNATURE for http POST method.
            </summary>
            <param name="request">
            The request.
            </param>
            <param name="secret">
            The secret.
            </param>
            <param name="jsonString">
            The json string.
            </param>
            <param name="errorMessage">
            The error message.
            </param>
            <returns>
            Returns true if successful otherwise false.
            </returns>
        </member>
        <member name="T:Facebook.FacebookApp">
            <summary>
            Represents the core Facebook functionality for web applications.
            </summary>
        </member>
        <member name="F:Facebook.FacebookApp._request">
            <summary>
            The current http context.
            </summary>
        </member>
        <member name="F:Facebook.FacebookApp._session">
            <summary>
            The current facebook session.
            </summary>
        </member>
        <member name="F:Facebook.FacebookApp._signedRequest">
            <summary>
            The current facebook signed request.
            </summary>
        </member>
        <member name="M:Facebook.FacebookApp.#ctor(Facebook.Web.FacebookWebContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApp"/> class.
            </summary>
            <param name="request">
            The request.
            </param>
            <param name="accessToken">
            The access token.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApp"/> class.
            </summary>
            <param name="accessToken">
            The access token.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.#ctor(Facebook.Web.FacebookWebContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApp"/> class.
            </summary>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApp"/> class.
            </summary>
        </member>
        <member name="M:Facebook.FacebookApp.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApp"/> class.
            </summary>
            <param name="appId">
            The app id.
            </param>
            <param name="appSecret">
            The app secret.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.#ctor(Facebook.IFacebookApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.FacebookApp"/> class.
            </summary>
            <param name="facebookApplication">
            The facebook application.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.Delete(System.String)">
            <summary>
            Makes a DELETE request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <returns>
            The json result.
            </returns>
            <exception cref="T:Facebook.FacebookApiException"/>
        </member>
        <member name="M:Facebook.FacebookApp.Delete(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a DELETE request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <returns>
            The json result.
            </returns>
            <exception cref="T:Facebook.FacebookApiException"/>
        </member>
        <member name="M:Facebook.FacebookApp.Get(System.String)">
            <summary>
            Makes a GET requst to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <returns>
            The json result.
            </returns>
            <exception cref="T:Facebook.FacebookApiException"/>
        </member>
        <member name="M:Facebook.FacebookApp.Get(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Get(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a GET request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Get``1(System.String)">
            <summary>
            Makes a GET request to the Facebook server.
            </summary>
            <typeparam name="T">
            The result of the API call.
            </typeparam>
            <param name="path">
            The resource path.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Get``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <typeparam name="T">
            The result of the API call.
            </typeparam>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Get``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a GET request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <typeparam name="T">
            The result of the API call.
            </typeparam>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Post(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a POST request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The jon result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Post(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a POST request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Post(System.Object)">
            <summary>
            Makes a POST request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Post(System.String,System.Object)">
            <summary>
            Makes a POST request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.DeleteAsync(System.String,Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous DELETE request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.DeleteAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous DELETE request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.DeleteAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous DELETE request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.DeleteAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous DELETE request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync(System.String,Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync``1(System.String,Facebook.FacebookAsyncCallback{``0})">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync``1(System.String,Facebook.FacebookAsyncCallback{``0},System.Object)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0})">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <typeparam name="T">
            </typeparam>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0},System.Object)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync``1(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0})">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetAsync``1(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback{``0},System.Object)">
            <summary>
            Makes an asynchronous GET request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.String,System.Object,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.Object,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.Object,Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.PostAsync(System.String,System.Object,Facebook.FacebookAsyncCallback)">
            <summary>
            Makes an asynchronous POST request to the Facebook server.
            </summary>
            <param name="path">
            The resource path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.Query(System.String)">
            <summary>
            Executes a FQL query.
            </summary>
            <param name="fql">
            The FQL query.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The FQL query result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Query(System.String[])">
            <summary>
            Executes a FQL multiquery.
            </summary>
            <param name="fql">
            The FQL queries.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            A collection of the FQL query results.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Fql(System.String)">
            <summary>
            Executes a FQL query.
            </summary>
            <param name="query">
            The FQL query.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The FQL query result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Fql(System.String[])">
            <summary>
            Executes a FQL multiquery.
            </summary>
            <param name="queries">
            The FQL queries.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            A collection of the FQL query results.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.QueryAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Executes a FQL query asynchronously.
            </summary>
            <param name="fql">
            The FQL query.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.QueryAsync(System.String,Facebook.FacebookAsyncCallback)">
            <summary>
            Executes a FQL query asynchronously.
            </summary>
            <param name="fql">
            The FQL query.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.QueryAsync(System.String[],Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Executes a FQL query asynchronously.
            </summary>
            <param name="fql">
            The FQL query.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.QueryAsync(System.String[],Facebook.FacebookAsyncCallback)">
            <summary>
            Executes a FQL multiquery asynchronously.
            </summary>
            <param name="fql">
            The FQL queries.
            </param>
            <param name="callback">
            The callback.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.GetFacebookClient">
            <summary>
            Gets the facebook client
            </summary>
            <returns>
            A new instance of <see cref="T:Facebook.FacebookClient"/>.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,Facebook.HttpMethod)">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="resultType">
            The result type.
            </param>
            <param name="httpMethod">
            The http method.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="httpMethod">
            The http method.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="httpMethod">
            The http method.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.String,Facebook.HttpMethod)">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="httpMethod">
            The http method.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.String)">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.Api(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Makes a request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <exception cref="T:Facebook.FacebookApiException"/>
            <returns>
            The json result.
            </returns>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="httpMethod">
            The http Method.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="userToken">
            The user Token.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync(Facebook.FacebookAsyncCallback,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="httpMethod">
            The http Method.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync(System.String,Facebook.HttpMethod,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="httpMethod">
            The http Method.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync(System.String,Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync(System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.FacebookAsyncCallback,System.Object)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="parameters">
            The parameters.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="M:Facebook.FacebookApp.ApiAsync``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Facebook.HttpMethod,Facebook.FacebookAsyncCallback{``0},System.Object)">
            <summary>
            Makes a async request to the Facebook server.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="parameters">
            The parameters.
            </param>
            <param name="httpMethod">
            The http Method.
            </param>
            <param name="callback">
            The callback.
            </param>
            <param name="state">
            The state.
            </param>
        </member>
        <member name="P:Facebook.FacebookApp.AppId">
            <summary>
            Gets or sets the Application ID.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.AppSecret">
            <summary>
            Gets or sets the Application API Secret.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.SignedRequest">
            <summary>
            Gets the signed request.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.Session">
            <summary>
            Gets or sets the active user session.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.IsAuthenticated">
            <summary>
            Gets a value indicating whether the current session is authenticated or not.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.IsSecureConnection">
            <summary>
            Gets or sets a value indicating whether the scheme is secure.
            </summary>
        </member>
        <member name="P:Facebook.FacebookApp.UseFacebookBeta">
            <summary>
            Gets or sets a value indicating whether to use Facebook beta.
            </summary>
        </member>
        <member name="T:Facebook.Web.FacebookWebClient">
            <summary>
            Represents the Facebook Web Client.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebClient"/> class.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebClient"/> class.
            </summary>
            <param name="accessToken">
            The access token.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookWebClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebClient"/> class.
            </summary>
            <param name="appId">
            The app id.
            </param>
            <param name="appSecret">
            The app secret.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookWebClient.#ctor(Facebook.IFacebookApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebClient"/> class.
            </summary>
            <param name="facebookApplication">
            The Facebook application.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookWebClient.#ctor(Facebook.Web.FacebookWebContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebClient"/> class.
            </summary>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookWebClient.Initialize(Facebook.Web.FacebookWebContext)">
            <summary>
            Initializes the FacebookWebClient from <see cref="T:Facebook.Web.FacebookWebContext"/>.
            </summary>
            <param name="request">
            The request.
            </param>
        </member>
        <member name="P:Facebook.Web.FacebookWebClient.IsSecureConnection">
            <summary>
            Gets or sets a value indicating whether the scheme is secure.
            </summary>
        </member>
        <member name="T:Facebook.Web.FacebookWebContext">
            <summary>
            Represents the Facebook authorizer class.
            </summary>
        </member>
        <member name="F:Facebook.Web.FacebookWebContext._facebookApplication">
            <summary>
            The Facebook settings.
            </summary>
        </member>
        <member name="F:Facebook.Web.FacebookWebContext._httpContext">
            <summary>
            The http context.
            </summary>
        </member>
        <member name="F:Facebook.Web.FacebookWebContext._session">
            <summary>
            The Facebook session.
            </summary>
        </member>
        <member name="F:Facebook.Web.FacebookWebContext._signedRequest">
            <summary>
            The Facebook signed request.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebContext"/> class.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.#ctor(Facebook.IFacebookApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebContext"/> class.
            </summary>
            <param name="settings">
            The settings.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.#ctor(Facebook.IFacebookApplication,System.Web.HttpContextBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Facebook.Web.FacebookWebContext"/> class.
            </summary>
            <param name="settings">
            The settings.
            </param>
            <param name="httpContext">
            The http context.
            </param>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.HasPermissions(System.String[])">
            <summary>
            Check whether the user has the specified permissions.
            </summary>
            <param name="permissions">
            The permissions.
            </param>
            <returns>
            Returns the list of allowed permissions.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.HasPermission(System.String)">
            <summary>
            Check whether the user has the specified permissions.
            </summary>
            <param name="permission">
            The permission.
            </param>
            <returns>
            Returns true if the user has permission otherwise false.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.IsAuthenticated">
            <summary>
            Checks whether the user is authenticated or not.
            </summary>
            <returns>Returns true if the user is authenticated else false.</returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.IsAuthorized">
            <summary>
            Checks if the user is authorized or not.
            </summary>
            <returns>Returns true if the user is authorized else false.</returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.IsAuthorized(System.String[])">
            <summary>
            Checks if the user is authenticated and the application has all the specified permissions.
            </summary>
            <returns>
            Return true if the user is authenticated and the application has all the specified permissions.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.HasPermissions(System.String,System.String,System.Int64,System.String[])">
            <summary>
            Check if the Facebook App has permissions from the specified user.
            </summary>
            <param name="accessToken">
            The access token.
            </param>
            <param name="appId">
            The app id.
            </param>
            <param name="userId">
            The user id.
            </param>
            <param name="permissions">
            The list of permissions.
            </param>
            <returns>
            The list of permissions that are allowed from the specified permissions.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebContext.DeleteAuthCookie">
            <summary>
            Deletes all Facebook authentication cookies found in the current request.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.Current">
            <summary>
            Gets the current Facebook web context.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.Settings">
            <summary>
            Gets the Facebook application settings.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.UserId">
            <summary>
            Gets the user id.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.AccessToken">
            <summary>
            Gets the access token.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.Session">
            <summary>
            Gets the Facebook session.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.SignedRequest">
            <summary>
            Gets the signed request.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.HttpContext">
            <summary>
            Gets the http context.
            </summary>
        </member>
        <member name="P:Facebook.Web.FacebookWebContext.IsSecureConnection">
            <summary>
            Gets a value indicating whether the request is a secure connection or not.
            </summary>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.Base64UrlDecode(System.String)">
            <summary>
            Base64 Url decode.
            </summary>
            <param name="base64UrlSafeString">
            The base 64 url safe string.
            </param>
            <returns>
            The base 64 url decoded string.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.Base64UrlEncode(System.Byte[])">
            <summary>
            Base64 url encode.
            </summary>
            <param name="input">
            The input.
            </param>
            <returns>
            Base64 url encoded string.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.ComputerMd5Hash(System.Byte[])">
            <summary>
            Computes the Md5 Hash.
            </summary>
            <param name="data">
            The input data.
            </param>
            <returns>
            The md5 hash.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.ComputeHmacSha256Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the Hmac Sha 256 Hash.
            </summary>
            <param name="data">
            The data to hash.
            </param>
            <param name="key">
            The hash key.
            </param>
            <returns>
            The Hmac Sha 256 hash.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.DecryptAes256CBCNoPadding(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt encrypted data using the Aes256 CBC no padding algorithm.
            </summary>
            <param name="encryptedData">
            The encrypted data.
            </param>
            <param name="key">
            The key.
            </param>
            <param name="iv">
            The iv.
            </param>
            <returns>
            The decrypted string.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.RemoveTrailingSlash(System.Uri)">
            <summary>
            Removes the trailing slash from the uri.
            </summary>
            <param name="url">
            The url to remove the trailing slash from.
            </param>
            <returns>
            The uri with trailing slash removed.
            </returns>
        </member>
        <member name="M:Facebook.Web.FacebookWebUtils.RemoveTrailingSlash(System.String)">
            <summary>
            Removes the trailing slash.
            </summary>
            <param name="input">
            The input string to remove the trailing slash from.
            </param>
            <returns>
            The string with trailing slash removed.
            </returns>
        </member>
        <member name="T:Facebook.Web.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidHttpXHubSignature">
            <summary>
              Looks up a localized string similar to Invalid HTTP_X_HUB_SIGNATURE..
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidHubChallenge">
            <summary>
              Looks up a localized string similar to Invalid hub challenge..
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidHubMode">
            <summary>
              Looks up a localized string similar to Invalid hub mode..
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidJsonString">
            <summary>
              Looks up a localized string similar to Invalid json string..
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidSignedRequest">
            <summary>
              Looks up a localized string similar to Invalid signed request..
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidSignedRequestSignature">
            <summary>
              Looks up a localized string similar to Invalid signed request. (Invalid signature.).
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.InvalidVerifyToken">
            <summary>
              Looks up a localized string similar to Invalid verify token..
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.OldSignedRequest">
            <summary>
              Looks up a localized string similar to Invalid signed request. (Too old.).
            </summary>
        </member>
        <member name="P:Facebook.Web.Properties.Resources.return_ssl_resources">
            <summary>
              Looks up a localized string similar to return_ssl_resources.
            </summary>
        </member>
    </members>
</doc>
